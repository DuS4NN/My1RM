/*
 * This file is generated by jOOQ.
 */
package com.my1rm.jooq.tables.records;


import com.my1rm.jooq.tables.Attempt;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttemptRecord extends UpdatableRecordImpl<AttemptRecord> implements Record8<Long, Timestamp, Short, Byte, Double, Long, Long, Long> {

    private static final long serialVersionUID = 964920590;

    /**
     * Setter for <code>my1rm.ATTEMPT.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>my1rm.ATTEMPT.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>my1rm.ATTEMPT.DATE</code>.
     */
    public void setDate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>my1rm.ATTEMPT.DATE</code>.
     */
    public Timestamp getDate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>my1rm.ATTEMPT.REPETITIONS</code>.
     */
    public void setRepetitions(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>my1rm.ATTEMPT.REPETITIONS</code>.
     */
    public Short getRepetitions() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>my1rm.ATTEMPT.SUCCESS</code>.
     */
    public void setSuccess(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>my1rm.ATTEMPT.SUCCESS</code>.
     */
    public Byte getSuccess() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>my1rm.ATTEMPT.WEIGHT</code>.
     */
    public void setWeight(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>my1rm.ATTEMPT.WEIGHT</code>.
     */
    public Double getWeight() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>my1rm.ATTEMPT.EXERCISE_ID</code>.
     */
    public void setExerciseId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>my1rm.ATTEMPT.EXERCISE_ID</code>.
     */
    public Long getExerciseId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>my1rm.ATTEMPT.SEASON_ID</code>.
     */
    public void setSeasonId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>my1rm.ATTEMPT.SEASON_ID</code>.
     */
    public Long getSeasonId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>my1rm.ATTEMPT.USER_ID</code>.
     */
    public void setUserId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>my1rm.ATTEMPT.USER_ID</code>.
     */
    public Long getUserId() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, Timestamp, Short, Byte, Double, Long, Long, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, Timestamp, Short, Byte, Double, Long, Long, Long> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Attempt.ATTEMPT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return Attempt.ATTEMPT.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return Attempt.ATTEMPT.REPETITIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return Attempt.ATTEMPT.SUCCESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return Attempt.ATTEMPT.WEIGHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return Attempt.ATTEMPT.EXERCISE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return Attempt.ATTEMPT.SEASON_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field8() {
        return Attempt.ATTEMPT.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getRepetitions();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component4() {
        return getSuccess();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component5() {
        return getWeight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component6() {
        return getExerciseId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component7() {
        return getSeasonId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component8() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getRepetitions();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getSuccess();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getWeight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getExerciseId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getSeasonId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value8() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttemptRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttemptRecord value2(Timestamp value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttemptRecord value3(Short value) {
        setRepetitions(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttemptRecord value4(Byte value) {
        setSuccess(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttemptRecord value5(Double value) {
        setWeight(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttemptRecord value6(Long value) {
        setExerciseId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttemptRecord value7(Long value) {
        setSeasonId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttemptRecord value8(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttemptRecord values(Long value1, Timestamp value2, Short value3, Byte value4, Double value5, Long value6, Long value7, Long value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AttemptRecord
     */
    public AttemptRecord() {
        super(Attempt.ATTEMPT);
    }

    /**
     * Create a detached, initialised AttemptRecord
     */
    public AttemptRecord(Long id, Timestamp date, Short repetitions, Byte success, Double weight, Long exerciseId, Long seasonId, Long userId) {
        super(Attempt.ATTEMPT);

        set(0, id);
        set(1, date);
        set(2, repetitions);
        set(3, success);
        set(4, weight);
        set(5, exerciseId);
        set(6, seasonId);
        set(7, userId);
    }
}
