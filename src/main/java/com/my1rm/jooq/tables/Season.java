/*
 * This file is generated by jOOQ.
 */
package com.my1rm.jooq.tables;


import com.my1rm.jooq.Indexes;
import com.my1rm.jooq.Keys;
import com.my1rm.jooq.Public;
import com.my1rm.jooq.tables.records.SeasonRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Season extends TableImpl<SeasonRecord> {

    private static final long serialVersionUID = -408451120;

    /**
     * The reference instance of <code>PUBLIC.SEASON</code>
     */
    public static final Season SEASON = new Season();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SeasonRecord> getRecordType() {
        return SeasonRecord.class;
    }

    /**
     * The column <code>PUBLIC.SEASON.ID</code>.
     */
    public final TableField<SeasonRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.SEASON.COLOR</code>.
     */
    public final TableField<SeasonRecord, String> COLOR = createField("COLOR", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>PUBLIC.SEASON.CREATED_AT</code>.
     */
    public final TableField<SeasonRecord, Timestamp> CREATED_AT = createField("CREATED_AT", org.jooq.impl.SQLDataType.TIMESTAMP.precision(6), this, "");

    /**
     * The column <code>PUBLIC.SEASON.NAME</code>.
     */
    public final TableField<SeasonRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>PUBLIC.SEASON.USER_ID</code>.
     */
    public final TableField<SeasonRecord, Long> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>PUBLIC.SEASON</code> table reference
     */
    public Season() {
        this(DSL.name("SEASON"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.SEASON</code> table reference
     */
    public Season(String alias) {
        this(DSL.name(alias), SEASON);
    }

    /**
     * Create an aliased <code>PUBLIC.SEASON</code> table reference
     */
    public Season(Name alias) {
        this(alias, SEASON);
    }

    private Season(Name alias, Table<SeasonRecord> aliased) {
        this(alias, aliased, null);
    }

    private Season(Name alias, Table<SeasonRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Season(Table<O> child, ForeignKey<O, SeasonRecord> key) {
        super(child, key, SEASON);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FKTCL52SDGLRMC1JPTFMNCINK09_INDEX_9, Indexes.PRIMARY_KEY_9);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SeasonRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_9;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SeasonRecord>> getKeys() {
        return Arrays.<UniqueKey<SeasonRecord>>asList(Keys.CONSTRAINT_9);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SeasonRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SeasonRecord, ?>>asList(Keys.FKTCL52SDGLRMC1JPTFMNCINK09);
    }

    public User user() {
        return new User(this, Keys.FKTCL52SDGLRMC1JPTFMNCINK09);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Season as(String alias) {
        return new Season(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Season as(Name alias) {
        return new Season(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Season rename(String name) {
        return new Season(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Season rename(Name name) {
        return new Season(name, null);
    }
}
